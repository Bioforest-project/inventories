---
title: "Data aggregation"
format:
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
execute:
  echo: false      
---

```{r setup, include=FALSE}
# knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
library(data.table)
library(BIOMASS)
library(ggplot2)
library(tidyverse)
```

<!-- TO DO
* check why the chucks are displayed despite the echo: false instruction.
--> 

# Introduction

-   what this code and document is for

-   how to use it

-   checklist of you need to do before running the script:

    -   sign the data agreement

    -   harmonize your dataset

    -   send species list (should already be ok)

-   add plot-level information in this [document](google%20doc)

<!-- Load the data -->

```{r load data}
# data_raw <- read.csv("data/raw_data/harmonized_data_misiones_v1.csv")
data_raw <- read.csv("data/raw_data/harmonized_data_bafog_v1.csv")
# head(data_raw)
# str(data_raw)
```

# General presentation of the data

This document presents the data aggregation for the `r unique(data_raw$Site)`. This site had `r length(unique(data_raw$Plot))` plots: `r unique(data_raw$Plot)`.

The following table shows the number of censuses per plots. 

```{r censusNb}
data_raw %>%
  group_by(Plot) %>%
  summarise(census_number = length(unique(IdCensus))) %>%
  knitr::kable()
```

Censuses were conducted between `r min(data_raw$Year)` and `r max(data_raw$Year)`.

*Please add a comment on question XXXX of the survey, if there are missing plots or censuses.*

# Check data consistency

This step checks for the absence of "anomalies" in the data.

## No NA values in DBH

```{r Na_DBH}
if (anyNA(data_raw$Diameter)) {
  nb_na_dbh <- sum(is.na(data_raw$Diameter))
  perc_na_dbh <- round(sum(is.na(data_raw$Diameter)) * 100 / dim(data_raw)[1], 2)
  text <- paste("There are", 
                nb_na_dbh, 
                "missing diameters in the data", "which represent",
                perc_na_dbh, 
                "% of the observations. 
                The missing values are distributed across the plots
                and censuses as follow:.", sep=" ")
} else {
  text <- "There are no missing diameter in the data."
}
```

`r text` 

```{r explo_na_DBH}
if (anyNA(data_raw$Diameter)) {
  data_raw  %>%
    filter(is.na(Diameter)) %>%
    count(Plot, IdCensus) %>%
    pivot_wider(names_from = Plot, values_from = n) %>%
    knitr::kable()
}
```

## DBH cutoff 

```{r DBHcutoff}
#| message: false 
#| warning: false
if(length(unique(data_raw$MinDBH))==1) {
  text <- paste("There is a single DBH cutoff set to", 
                unique(data_raw$MinDBH),
                "for the whole data set.") 
} else {
  #count the number of cutoff per plot and census
    data_raw  %>%
      group_by(Plot, IdCensus) %>%
      summarise(cutoff = length(unique(MinDBH))) -> cutoff_plot_cens
  if(length(unique(cutoff_plot_cens$cutoff))!=1) {
    text <- "There is more than one DBH cutoff per plot and per census.
    This is a problem, please check the data."
  } else {
    text <- "There are several DBH cutoff, as follow:"
  }
}
```

`r text`

```{r display_cutoff}
#| message: false 
#| warning: false
if(length(unique(data_raw$MinDBH))!=1) {
  if(length(unique(cutoff_plot_cens$cutoff))==1) {
  data_raw  %>%
    group_by(Plot, IdCensus) %>%
    summarise(dbhcut = unique(MinDBH)) %>%
    pivot_wider(names_from = Plot, values_from = dbhcut) %>%
    knitr::kable() 
  }
}
```

## All trees above the DBH cutoff

```{r abovecutoff}
data_raw %>%
  filter(Diameter < MinDBH) %>%
  select(MinDBH, IdCensus, Plot, Diameter) -> below_cut
if(dim(below_cut)[1]==0) {
  text <- "There are no tree with a DBH below the DBH cutoff."
} else {
  below_cut %>% 
    mutate(DBHDiff = MinDBH - Diameter) -> below_cut
  text <- paste("There are",
                dim(below_cut)[1],
                "stems with a DBH below the DBH cutoff (",
                round(dim(below_cut)[1] *100 / dim(data_raw)[1],1),
                "%). For these stems, the difference between 
                the DBH and the cutoff ranges between",
                round(min(below_cut$DBHDiff), 2), "cm and", 
                round(max(below_cut$DBHDiff), 2),
                "cm, with a median value of",
                round(median(below_cut$DBHDiff),2), "cm .",
                sep=" ")
}
```

`r text`

<!-- TO DO : DELETE THE TREE BELOW CUTOFF-->

## No tree ID duplicates

## Only one species per tree

## Only one set of coordinates per tree and no missing coordinates

## All trees within the plot


# First step of data visualization

-   stem abundance by plot and census year

-   mean (or median) dbh by plot and census year

-   number of species

-   maps per plot and per census

# DBH corrections

flowchart

# Biodiversity metrics

# Aboveground biomass
