---
title: "Data aggregation"
format:
  pdf:
    toc: true
    number-sections: true
    colorlinks: true
execute:
  echo: false      
---

```{r setup, include=FALSE}
# knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
library(data.table)
library(BIOMASS)
library(ggplot2)
library(tidyverse)
```

<!-- TO DO
* check why the chucks are displayed despite the echo: false instruction.
--> 

# Introduction

-   what this code and document is for

-   how to use it

-   checklist of you need to do before running the script:

    -   sign the data agreement

    -   harmonize your dataset

    -   send species list (should already be ok)

-   add plot-level information in this [document](google%20doc)

<!-- Load the data -->

```{r load data}
# data_raw <- read.csv("data/raw_data/harmonized_data_misiones_v1.csv")
data_raw <- read.csv("data/raw_data/harmonized_data_bafog_v1.csv")
# head(data_raw)
# str(data_raw)
```

# General presentation of the data

This document presents the data aggregation for the `r unique(data_raw$Site)`. This site had `r length(unique(data_raw$Plot))` plots: `r unique(data_raw$Plot)`.

It has `r dim(data_raw)[1]` observations, belonging to `r length(unique(data_raw$IdStem))` stems.

The following table shows the number of censuses per plots. 

```{r censusNb}
data_raw %>%
  group_by(Plot) %>%
  summarise(census_number = length(unique(IdCensus))) %>%
  knitr::kable()
```

Censuses were conducted between `r min(data_raw$Year)` and `r max(data_raw$Year)`.

*Please add a comment on question XXXX of the survey, if there are missing plots or censuses.*

# Check data consistency

This step checks for the absence of "anomalies" in the data.

## No NA values in DBH

```{r Na_DBH}
if (anyNA(data_raw$Diameter)) {
  nb_na_dbh <- sum(is.na(data_raw$Diameter))
  perc_na_dbh <- round(sum(is.na(data_raw$Diameter)) * 100 / dim(data_raw)[1], 2)
  text <- paste("There are",
    nb_na_dbh,
    "missing diameters in the data, which represent",
    perc_na_dbh,
    "% of the observations.
    The missing values are distributed across the plots and censuses as follow:.",
    sep = " "
  )
} else {
  text <- "There are no missing diameter in the data."
}
```

`r text` 

```{r explo_na_DBH}
if (anyNA(data_raw$Diameter)) {
  data_raw %>%
    filter(is.na(Diameter)) %>%
    count(Plot, IdCensus) %>%
    pivot_wider(names_from = Plot, values_from = n) %>%
    knitr::kable()
}
```

## DBH cutoff 

```{r DBHcutoff}
#| message: false
#| warning: false
if (length(unique(data_raw$MinDBH)) == 1) {
  text <- paste(
    "There is a single DBH cutoff set to",
    unique(data_raw$MinDBH),
    "for the whole data set."
  )
} else {
  # count the number of cutoff per plot and census
  data_raw %>%
    group_by(Plot, IdCensus) %>%
    summarise(cutoff = length(unique(MinDBH))) -> cutoff_plot_cens
  if (length(unique(cutoff_plot_cens$cutoff)) != 1) {
    text <- "There is more than one DBH cutoff per plot and per census.
    This is a problem, please check the data."
  } else {
    text <- "There are several DBH cutoff, as follow:"
  }
}
```

`r text`

```{r display_cutoff}
#| message: false
#| warning: false
if (length(unique(data_raw$MinDBH)) != 1) {
  if (length(unique(cutoff_plot_cens$cutoff)) == 1) {
    data_raw %>%
      group_by(Plot, IdCensus) %>%
      summarise(dbhcut = unique(MinDBH)) %>%
      pivot_wider(names_from = Plot, values_from = dbhcut) %>%
      knitr::kable()
  }
}
```

## All trees above the DBH cutoff

```{r abovecutoff}
data_raw %>%
  filter(Diameter < MinDBH) %>%
  select(MinDBH, IdCensus, Plot, Diameter) -> below_cut
if (dim(below_cut)[1] == 0) {
  text <- "There are no stems with a DBH below the DBH cutoff."
  data <- data_raw
} else {
  below_cut %>%
    mutate(DBHDiff = MinDBH - Diameter) -> below_cut
  data_cor <- data_raw %>% filter(Diameter >= MinDBH)
  text <- paste("There are ",
    dim(below_cut)[1],
    " observations of stems with a DBH below the DBH cutoff (",
    round(dim(below_cut)[1] * 100 / dim(data_raw)[1], 1),
    "%). For these observations, the difference between
                the DBH and the cutoff ranges between ",
    round(min(below_cut$DBHDiff), 2), " cm and ",
    round(max(below_cut$DBHDiff), 2),
    " cm, with a median value of ",
    round(median(below_cut$DBHDiff), 2), "cm.
                These observations are removed, leaving a dataset of ",
    dim(data_cor)[1],
    " observations.",
    sep = ""
  )
}
```

`r text`


## No stem ID duplicates

```{r nostemID_duplicate}
# make a dummy data_set to test
# dupl <- slice_sample(data_cor, n=15) # some duplicated
# dupl %>%
#    mutate(Diameter=replace(Diameter, IdStem==dupl$IdStem[1],
#                            dupl$Diameter[1]+10)) -> dupl # one duplicated with different DBH
# data_cor <- rbind(data_cor, dupl)
# data_cor <- rbind(data_cor, slice_sample(dupl, n=3)) # some duplicated twice
# data_cor %>% filter(IdStem == dupl$IdStem[2]) %>%
#   slice_sample(, n=2) -> dupl_sev_census  # one IDstem with several duplicated censuses
# data_cor <- rbind(data_cor, dupl_sev_census)

data_cor %>%
  count(IdStem, IdCensus) -> nb_stem_plot

if (all(length(unique(nb_stem_plot$n)) == 1, unique(nb_stem_plot$n) == 1)) {
  text <- "There is no duplicated stem identifiers within a same census."
} else {
  nb_stem_plot %>%
    filter(n > 1) -> stem_dupli
  text <- paste("There are ",
    dim(stem_dupli)[1],
    " cases of duplicated stem identifiers within a same census,",
    " with a number of duplications ranging from ",
    stem_dupli %>% summarise(min(n)),
    " and ",
    stem_dupli %>% summarise(max(n)),
    " (mean = ",
    stem_dupli %>% summarise(round(mean(n), 2)),
    "). These duplications concern ",
    length(unique(stem_dupli$IdStem)),
    " stems.",
    sep = ""
  )
}
```

`r text`

```{r rmv_full_duplicate}
if (length(unique(nb_stem_plot$n)) != 1) { # if there are some duplicates
  prev_nb_obs <- dim(data_cor)[1]
  data_cor %>% distinct() -> data_cor # remove fully duplicated rows
  if (prev_nb_obs - dim(data_cor)[1] != 0) { # if there were some fully duplicated rows
    text <- paste(
      prev_nb_obs - dim(data_cor)[1],
      "rows are true duplicates (fully identical rows).",
      "These true duplicates are removed from the dataset, leaving a dataset of ",
      dim(data_cor)[1],
      " observations."
    )
  } else {
    text <- ""
  }
  data_cor %>%
    count(IdStem, IdCensus) -> nb_stem_plot_bis
} else { # if no duplicated rows
  text <- ""
}
```

`r text`

```{r non_full_duplicates}
if (length(unique(nb_stem_plot$n)) != 1) { # if there are some duplicates
  if (all(length(unique(nb_stem_plot_bis$n)) == 1, unique(nb_stem_plot_bis$n) == 1)) {
    text <- "There is no more duplicated stem identifiers within a same census."
    still_stem_dupli <- FALSE
  } else {
    nb_stem_plot_bis %>%
      filter(n > 1) -> stem_dupli_bis
    text <- paste(
      "There are still",
      dim(stem_dupli_bis)[1],
      "cases of duplicated stem identifiers within a same census,",
      "which are not fully replicated rows.",
      "This concern the following cases:"
    )
    still_stem_dupli <- TRUE
  }
} else {
  still_stem_dupli <- FALSE
}
```

`r text`

```{r which_still_dupli}
if (still_stem_dupli == TRUE) {
  stem_dupli_bis %>% knitr::kable()
}
```

```{r warn_still_duplicate}
if (still_stem_dupli == TRUE) {
  text <- "IMPORTANT: Please check this cases in your raw data before starting the process again."
} else {
  text <- ""
}
```

`r text`

## Are there multi-stemmed trees?

```{r nbstemID}
if (length(unique(data_cor$IdStem)) == length(unique(data_cor$IdTree))) {
  text <- "The number of stem identifiers and the number of tree identifiers are equal, suggesting either that there
  are no multi-stemmed trees, or that the multiple stems are considered
  as different individuals."
} else {
  if (length(unique(data_cor$IdStem)) > length(unique(data_cor$IdTree))) {
    text <- "There are more stem identifiers than tree identifiers (as given in the original dataset), suggesting that there are some multi-stemmed trees."
  } else {
    text <- "There are less stem identifiers than tree identifiers (as given in the original dataset), which suggest a problem of duplicated stem identifiers."
  }
}
```

`r text`

## Only one species per tree

## Only one set of coordinates per tree and no missing coordinates

<!-- Which coordinates do we take ? check if there are dataset with no absolute coordinate-->

## All trees within the plot


# First step of data visualization

-   stem abundance by plot and census year

-   mean (or median) dbh by plot and census year

-   number of species

-   maps per plot and per census

# DBH corrections

flowchart

# Biodiversity metrics

# Aboveground biomass
